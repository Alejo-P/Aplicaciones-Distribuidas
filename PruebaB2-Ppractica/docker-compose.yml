services:
  # Nodo MySQL maestro1
  mysql-master1:
    image: mysql:8.0
    container_name: mysql_maestro1
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=replica
    command: --server-id=1 --log-bin=mysql-bin --binlog-do-db=replica
    networks:
      - backend
    volumes:
      - ./mysql-data1:/var/lib/mysql        # Volumen para datos de MySQL
      - ./mysql-config1:/etc/mysql/conf.d   # Volumen para configuración

  # Nodo MySQL maestro2
  mysql-master2:
    image: mysql:8.0
    container_name: mysql_maestro2
    ports:
      - 3307:3306
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=replica
    command: --server-id=2 --log-bin=mysql-bin --binlog-do-db=replica
    networks:
      - backend
    volumes:
      - ./mysql-data2:/var/lib/mysql        # Volumen para datos de MySQL
      - ./mysql-config2:/etc/mysql/conf.d   # Volumen para configuración

  # Contenedor de phpMyAdmin para MySQL maestro1
  phpmyadmin1:
    image: phpmyadmin:latest
    container_name: phpmyadmin_m1
    ports:
      - 8081:80
    environment:
      - PMA_HOST=mysql-master1
      - PMA_USER=root
      - PMA_PASSWORD=root
    networks:
      - backend

  # Contenedor de phpMyAdmin para MySQL maestro2
  phpmyadmin2:
    image: phpmyadmin:latest
    container_name: phpmyadmin_m2
    ports:
      - 8082:80
    environment:
      - PMA_HOST=mysql-master2
      - PMA_USER=root
      - PMA_PASSWORD=root
    networks:
      - backend

  # Balanceador NGINX
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginxPrueba
    ports:
      - "80:80"
    depends_on:
      - phpmyadmin1
      - phpmyadmin2
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  mysql-data1:
  mysql-data2:
  mysql-config1:
  mysql-config2:
